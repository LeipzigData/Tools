Construct-Anfrage unter http://leipzig-data.de:8890/sparql stellen,
als ntriples ausgeben lassen,
als a.ttl speichern

PREFIX ld: <http://leipzig-data.de/Data/Model/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX cal: <http://www.w3.org/2002/12/cal/ical#> 
Construct { 
  ?a ?ap ?ao .
}
Where { 
  ?a ?ap ?ao .
  ?a cal:dtstart ?as .
  ?a a ld:Event .
FILTER ( xsd:dateTime(?as) > xsd:dateTime("2012-11-01T00:00:00Z") )
} 

-------------------------------------
PREFIX ld: <http://leipzig-data.de/Data/Model/>
construct { 
  ?a ?ap ?ao .
  ?ao ?bp ?bo .
  ?bo ?cp ?co .
  ?co ?dp ?do .
}
Where { 
  ?a ?ap ?ao .
  ?a a ld:Ort .
  ?a ld:hasTag <http://leipzig-data.de/Data/Tag/MINT> .
  optional { ?ao ?bp ?bo .  }
  optional { ?bo ?cp ?co .  }
  optional { ?co ?dp ?do .  }
} 
-------------------------------------

Verarbeitung:
Speichern unter a.ttl

cat ??/RDFData/Prefix.ttl a.ttl >b.ttl 

rapper -g b.ttl -o turtle > c.ttl # mache daraus unser Format

-------------------------------------
Suche die bekannten Geokoordinaten f√ºr gegebene Orte heraus

PREFIX ld: <http://leipzig-data.de/Data/Model/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> 
select ?a ?glat ?glong 
Where { 
  ?a ld:hasAddress ?ao .
  ?a a ld:Ort .
  optional { ?ao geo:lat ?glat .  }
  optional { ?ao geo:long ?glong .  }
} 
-------------------------------------
